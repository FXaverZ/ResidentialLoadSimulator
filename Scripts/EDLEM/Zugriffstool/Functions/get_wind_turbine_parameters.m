function wind_turbine_parameters = get_wind_turbine_parameters(idx_typ)
%GET_WIND_TURBINE_PARAMETERS    Auslesen der Parameter der Windturbinen
%    GET_WIND_TURBINE_PARAMETERS ist die Definitionsdatei für verschiedene
%    Windturbinen und kann deren Parameter zurückgeben:
%
%    WIND_TURBINE_PARAMETERS = GET_WIND_TURBINE_PARAMETERS('typs') gibt alle
%    Anlagennamen als [N,1]-Cell-Array zurück. Mit Hilfe dieser Namen kann der Index
%    IDX_TYP ermittelt werden, um damit Parameterarrays einzelner Anlagen zu
%    erhalten.
%
%    WIND_TURBINE_PARAMETERS = GET_WIND_TURBINE_PARAMETERS(IDX_TYP) gibt von der
%    Anlage Nr. IDX_TYP die Parameter als [1,8]-Cell-Array zurück. Das Cell-Array
%    enthält folgende Parameter:
%        {name, rotor_typ, rotor_size, nom_power, v_nom, v_start, v_cut_off, c_p}
%             name        ... Name der Anlage
%             rotor_typ   ... Rotoraufbau
%             rotor_size  ... Rotordurchmesser
%             nom_power   ... Nennleistung
%             v_nom       ... Windgeschwindigkeit für Nennleistung
%             v_start     ... Anlaufwindgeschwindigkeit
%             v_cut_off   ... Abschaltwindgeschwindigkeit
%             c_p         ... c_p-Werte als [N,2]-Array:
%                                 1.Spalte: Windgeschwindigkeit [m/s]
%                                 2.Spalte: c_p = f(v_wind)
% 
%    WIND_TURBINE_PARAMETERS = GET_WIND_TURBINE_PARAMETERS('all') gibt sämtliche
%    Parameter aller Anlagen als [N,8]-Cell-Array zurück.

% Franz Zeilinger - 02.01.2012

rho = 1.225;        % Lufdichte [kg/m³]
pool_wind_generators = {};
%====================================================================================
%      B L A C K   6 0 0
%------------------------------------------------------------------------------------
name =       'Black 600';    % Name der Anlage
rotor_typ =    '3-Blatt';    % Rotoraufbau
rotor_size =         1.6;    % Rotordurchmesser [m]
nom_power =          600;    % Nennleistung [W]
v_nom =               11;    % Windgeschw. für Nennleistung [m/s]
v_start =            0.8;    % Anlaufwindgeschwindigkeit [m/s]
v_cut_off =         18.5;    % Abschaltwindgeschwindigkeit [m/s]
% Array mit Windgeschwindigkeits/Leistungsdaten:
P_f_v = [...
	 0,   0.0;...
	 1,   5.8;...
	 2,  11.5;...
	 3,  17.3;...
	 4,  34.6;...
	 5,  63.4;...
	 6, 106.6;...
	 7, 175.7;...
	 8, 259.3;...
	 9, 374.5;...
	10, 501.2;...
	11, 600.0;...
	12, 600.0;...
	13, 600.0;...
	14, 600.0;...
	15, 600.0;...
	16, 600.0;...
	17, 600.0;...
	18, 600.0;...
	19,   0.0;...
	20,   0.0;...
	21,   0.0;...
	22,   0.0;...
	23,   0.0;...
	24,   0.0;...
	25,   0.0;...
	];
% Daraus die c_p-Werte ermitteln:
c_p = [P_f_v(:,1),8*P_f_v(:,2)./(rotor_size^2*pi*rho*P_f_v(:,1).^3)];
% Bei Division durch Null (v_wind = 0 wurde angegeben), Werte durch Null ersetzen:
c_p(isnan(c_p(:,2)),2) = 0;
% Winkraftanlage dem Pool hinzufügen:
pool_wind_generators(end+1,:) = ...
	{name, rotor_typ, rotor_size, nom_power, v_nom, v_start, v_cut_off, c_p};

%====================================================================================
%      W S D   1 0 0 0
%------------------------------------------------------------------------------------
name =        'WSD 1000';    % Name der Anlage
rotor_typ =    '5-Blatt';    % Rotoraufbau
rotor_size =        1.82;    % Rotordurchmesser [m]
nom_power =         1000;    % Nennleistung [W]
v_nom =             12.5;    % Windgeschw. für Nennleistung [m/s]
v_start =            2.2;    % Anlaufgeschwindigkeit [m/s]
v_cut_off =         15.0;    % Abschaltgeschwindigkeit [m/s]
% Array mit Windgeschwindigkeits/Leistungsdaten [m/s, W]:
P_f_v = [...
	 1,    0.0;...
	 2,   20.1;...
	 3,   30.2;...
	 4,	  55.3;...
	 5,	  98.0;...
	 6,	 170.9;...
	 7,	 276.4;...
	 8,	 385.0;...
	 9,	 497.5;...
	10,	 618.1;...
	11,	 763.8;...
	12,	 914.6;...
  12.5, 1000.0;...
	13,	1055.3;...
	14,	1145.7;...
	15,	   0.0;...
	16,	   0.0;...
	17,	   0.0;...
	18,	   0.0;...
	19,	   0.0;...
	20,	   0.0;...
	21,	   0.0;...
	22,	   0.0;...
	23,	   0.0;...
	24,	   0.0;...
	25,	   0.0;...
	];
% Daraus die c_p-Werte ermitteln:
c_p = [P_f_v(:,1),8*P_f_v(:,2)./(rotor_size^2*pi*rho*P_f_v(:,1).^3)];

% Winkraftanlage dem Pool hinzufügen:
pool_wind_generators(end+1,:) = ...
	{name, rotor_typ, rotor_size, nom_power, v_nom, v_start, v_cut_off, c_p};

%====================================================================================
%      H E T R O N I X   2 0 0 0
%------------------------------------------------------------------------------------
name =   'Hetronix 2000';    % Name der Anlage
rotor_typ =    '3-Blatt';    % Rotoraufbau
rotor_size =         2.5;    % Rotordurchmesser [m]
nom_power =         2000;    % Nennleistung [W]
v_nom =             12.5;    % Windgeschw. für Nennleistung [m/s]
v_start =            3.0;    % Anlaufgeschwindigkeit [m/s]
v_cut_off =         18.5;    % Abschaltgeschwindigkeit [m/s]
% Array mit Windgeschwindigkeits/Leistungsdaten [m/s, W]:
P_f_v = [...
	 1,    0.0;...
	 2,    0.0;...
	 3,  140.0;...
	 4,	 233.3;...
	 5,	 342.2;...
	 6,	 466.7;...
	 7,	 684.4;...
	 8,	 902.2;...
	 9,	1197.8;...
	10,	1602.2;...
	11,	2022.2;...
	12,	2877.8;...
	13,	3157.8;...
	14,	3157.8;...
	15,	3157.8;...
	16,	3157.8;...
	17,	3157.8;...
	18,	3157.8;...
	19,	   0.0;...
	20,	   0.0;...
	21,	   0.0;...
	22,	   0.0;...
	23,	   0.0;...
	24,	   0.0;...
	25,	   0.0;...
	];
% Daraus die c_p-Werte ermitteln:
c_p = [P_f_v(:,1),8*P_f_v(:,2)./(rotor_size^2*pi*rho*P_f_v(:,1).^3)];

% Winkraftanlage dem Pool hinzufügen:
pool_wind_generators(end+1,:) = ...
	{name, rotor_typ, rotor_size, nom_power, v_nom, v_start, v_cut_off, c_p};

%====================================================================================
%      A N T A R I S   3 5 0 0
%------------------------------------------------------------------------------------
name =    'Antaris 3500';    % Name der Anlage
rotor_typ =    '3-Blatt';    % Rotoraufbau
rotor_size =         3.5;    % Rotordurchmesser [m]
nom_power =         3600;    % Nennleistung [W]
v_nom =             11.5;    % Windgeschw. für Nennleistung [m/s]
v_start =            2.9;    % Anlaufgeschwindigkeit [m/s]
v_cut_off =         18.0;    % Abschaltgeschwindigkeit [m/s]
% Array mit Windgeschwindigkeits/Leistungsdaten [m/s, W]:
P_f_v = [...
	 1,    0.0;...
	 2,    0.0;...
	 3,  111.1;...
	 4,	 194.4;...
	 5,	 330.0;...
	 6,	 583.3;...
	 7,	 916.7;...
	 8,	1340.0;...
	 9,	1860.1;...
	10,	2527.8;...
	11,	3333.3;...
  11.5, 3805.6;...
	12, 3805.6;...
	13, 3805.6;...
	14, 3805.6;...
	15, 3805.6;...
	16, 3805.6;...
	17, 3805.6;...
	18, 3805.6;...
	19,	   0.0;...
	20,	   0.0;...
	21,	   0.0;...
	22,	   0.0;...
	23,	   0.0;...
	24,	   0.0;...
	25,	   0.0;...
	];
% Daraus die c_p-Werte ermitteln:
c_p = [P_f_v(:,1),8*P_f_v(:,2)./(rotor_size^2*pi*rho*P_f_v(:,1).^3)];

% Winkraftanlage dem Pool hinzufügen:
pool_wind_generators(end+1,:) = ...
	{name, rotor_typ, rotor_size, nom_power, v_nom, v_start, v_cut_off, c_p};
%====================================================================================

if ischar(idx_typ) && strcmpi(idx_typ, 'all')
	% Alle Anlagenparameter zurückgeben:
	wind_turbine_parameters = pool_wind_generators;
elseif ischar(idx_typ) && strcmpi(idx_typ, 'typs')
	% Nur Namen der Anlagen zurückgeben:
	wind_turbine_parameters = pool_wind_generators(:,1);
else
	% jene Parameter zurückgeben, die durch den Index idx_typ gekennzeichnet wurden:
	wind_turbine_parameters = pool_wind_generators(idx_typ,:);
end

